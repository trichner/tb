// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeUnknown-0]
	_ = x[TokenTypeOpeningBrace-1]
	_ = x[TokenTypeClosingBrace-2]
	_ = x[TokenTypeOpeningBracket-3]
	_ = x[TokenTypeClosingBracket-4]
	_ = x[TokenTypeComma-5]
	_ = x[TokenTypeColon-6]
	_ = x[TokenTypeText-7]
	_ = x[TokenTypePrimitiveText-8]
	_ = x[TokenTypePrimitiveNumber-9]
	_ = x[TokenTypeEOF-10]
}

const _TokenType_name = "TokenTypeUnknownTokenTypeOpeningBraceTokenTypeClosingBraceTokenTypeOpeningBracketTokenTypeClosingBracketTokenTypeCommaTokenTypeColonTokenTypeTextTokenTypePrimitiveTextTokenTypePrimitiveNumberTokenTypeEOF"

var _TokenType_index = [...]uint8{0, 16, 37, 58, 81, 104, 118, 132, 145, 167, 191, 203}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
